//
//  ScoreKit.m
//  ScoreDemo
//
//  Created by pengxianhe on 15/5/17.
//  Copyright (c) 2015 747.cn. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "ScoreKit.h"


@implementation ScoreKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawScoreStarWithFrontColor: (UIColor*)frontColor
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(30, 0)];
    [bezierPath addCurveToPoint: CGPointMake(30, 30) controlPoint1: CGPointMake(30, 0) controlPoint2: CGPointMake(30, 30)];
    [bezierPath addLineToPoint: CGPointMake(0, 30)];
    [bezierPath addLineToPoint: CGPointMake(0, 0)];
    [bezierPath addLineToPoint: CGPointMake(15, 0)];
    [bezierPath addCurveToPoint: CGPointMake(13.36, 4.73) controlPoint1: CGPointMake(15, 0) controlPoint2: CGPointMake(14.2, 2.31)];
    [bezierPath addCurveToPoint: CGPointMake(11.47, 10.15) controlPoint1: CGPointMake(12.44, 7.38) controlPoint2: CGPointMake(11.47, 10.15)];
    [bezierPath addLineToPoint: CGPointMake(0.73, 10.36)];
    [bezierPath addLineToPoint: CGPointMake(9.29, 16.85)];
    [bezierPath addLineToPoint: CGPointMake(6.18, 27.14)];
    [bezierPath addLineToPoint: CGPointMake(15, 21)];
    [bezierPath addLineToPoint: CGPointMake(23.82, 27.14)];
    [bezierPath addLineToPoint: CGPointMake(20.71, 16.85)];
    [bezierPath addLineToPoint: CGPointMake(29.27, 10.36)];
    [bezierPath addLineToPoint: CGPointMake(18.53, 10.15)];
    [bezierPath addLineToPoint: CGPointMake(15, 0)];
    [bezierPath addLineToPoint: CGPointMake(30, 0)];
    [bezierPath addLineToPoint: CGPointMake(30, 0)];
    [bezierPath closePath];
    [frontColor setFill];
    [bezierPath fill];
}

+ (void)drawScoreViewWithFrame: (CGRect)frame frontColor: (UIColor*)frontColor fillColor: (UIColor*)fillColor backColor: (UIColor*)backColor scoreLevel: (CGFloat)scoreLevel
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    CGFloat fillWidth = CGRectGetWidth(frame) * scoreLevel;


    //// Subframes
    CGRect starsGroup = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), CGRectGetWidth(frame), CGRectGetHeight(frame));


    //// backView Drawing
    UIBezierPath* backViewPath = [UIBezierPath bezierPathWithRect: CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), CGRectGetWidth(frame), CGRectGetHeight(frame))];
    [backColor setFill];
    [backViewPath fill];


    //// fillView Drawing
    UIBezierPath* fillViewPath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, fillWidth, CGRectGetHeight(frame))];
    [fillColor setFill];
    [fillViewPath fill];


    //// StarsGroup
    {
        //// Symbol Drawing
        CGRect symbolRect = CGRectMake(CGRectGetMinX(starsGroup) + floor(CGRectGetWidth(starsGroup) * 0.00000 + 0.5), CGRectGetMinY(starsGroup) + floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5), floor(CGRectGetWidth(starsGroup) * 0.21000 + 0.5) - floor(CGRectGetWidth(starsGroup) * 0.00000 + 0.5), floor(CGRectGetHeight(starsGroup) * 1.00000 + 0.5) - floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbolRect);
        CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y);
        CGContextScaleCTM(context, symbolRect.size.width / 30, symbolRect.size.height / 30);

        [ScoreKit drawScoreStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);


        //// Symbol 2 Drawing
        CGRect symbol2Rect = CGRectMake(CGRectGetMinX(starsGroup) + floor(CGRectGetWidth(starsGroup) * 0.21000 + 0.5), CGRectGetMinY(starsGroup) + floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5), floor(CGRectGetWidth(starsGroup) * 0.40500 + 0.5) - floor(CGRectGetWidth(starsGroup) * 0.21000 + 0.5), floor(CGRectGetHeight(starsGroup) * 1.00000 + 0.5) - floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbol2Rect);
        CGContextTranslateCTM(context, symbol2Rect.origin.x, symbol2Rect.origin.y);
        CGContextScaleCTM(context, symbol2Rect.size.width / 30, symbol2Rect.size.height / 30);

        [ScoreKit drawScoreStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);


        //// Symbol 3 Drawing
        CGRect symbol3Rect = CGRectMake(CGRectGetMinX(starsGroup) + floor(CGRectGetWidth(starsGroup) * 0.40500 + 0.5), CGRectGetMinY(starsGroup) + floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5), floor(CGRectGetWidth(starsGroup) * 0.59500 + 0.5) - floor(CGRectGetWidth(starsGroup) * 0.40500 + 0.5), floor(CGRectGetHeight(starsGroup) * 1.00000 + 0.5) - floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbol3Rect);
        CGContextTranslateCTM(context, symbol3Rect.origin.x, symbol3Rect.origin.y);
        CGContextScaleCTM(context, symbol3Rect.size.width / 30, symbol3Rect.size.height / 30);

        [ScoreKit drawScoreStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);


        //// Symbol 4 Drawing
        CGRect symbol4Rect = CGRectMake(CGRectGetMinX(starsGroup) + floor(CGRectGetWidth(starsGroup) * 0.59500 + 0.5), CGRectGetMinY(starsGroup) + floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5), floor(CGRectGetWidth(starsGroup) * 0.79000 + 0.5) - floor(CGRectGetWidth(starsGroup) * 0.59500 + 0.5), floor(CGRectGetHeight(starsGroup) * 1.00000 + 0.5) - floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbol4Rect);
        CGContextTranslateCTM(context, symbol4Rect.origin.x, symbol4Rect.origin.y);
        CGContextScaleCTM(context, symbol4Rect.size.width / 30, symbol4Rect.size.height / 30);

        [ScoreKit drawScoreStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);


        //// Symbol 5 Drawing
        CGRect symbol5Rect = CGRectMake(CGRectGetMinX(starsGroup) + floor(CGRectGetWidth(starsGroup) * 0.79000 + 0.5), CGRectGetMinY(starsGroup) + floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5), floor(CGRectGetWidth(starsGroup) * 1.00000 + 0.5) - floor(CGRectGetWidth(starsGroup) * 0.79000 + 0.5), floor(CGRectGetHeight(starsGroup) * 1.00000 + 0.5) - floor(CGRectGetHeight(starsGroup) * 0.00000 + 0.5));
        CGContextSaveGState(context);
        UIRectClip(symbol5Rect);
        CGContextTranslateCTM(context, symbol5Rect.origin.x, symbol5Rect.origin.y);
        CGContextScaleCTM(context, symbol5Rect.size.width / 30, symbol5Rect.size.height / 30);

        [ScoreKit drawScoreStarWithFrontColor: frontColor];
        CGContextRestoreGState(context);
    }
}

@end
